exports[`AddItem component renders correctly when canChangeType is true and initialIsProject is false 1`] = `
<AddItem
  canChangeType={true}
  onAddItem={[Function]}>
  <form
    onSubmit={[Function]}>
    <Paper
      className="md-drawer-relative"
      component="div"
      style={
        Object {
          "backgroundColor": "#fff",
          "padding": 10,
        }
      }
      zDepth={2}>
      <div
        className="md-paper md-paper--2 md-drawer-relative"
        style={
          Object {
            "backgroundColor": "#fff",
            "padding": 10,
          }
        }>
        <div
          className="flex column">
          <TextField
            fullWidth={true}
            leftIconStateful={true}
            lineDirection="left"
            onChange={[Function]}
            passwordIconChildren="remove_red_eye"
            placeholder="e.g. Finish Report @work"
            rightIconStateful={true}
            type="text"
            value="">
            <div
              className="md-text-field-container md-full-width md-text-field-container--input"
              onClick={[Function]}
              style={
                Object {
                  "height": null,
                }
              }>
              <FloatingLabel
                active={false}
                error={false}
                floating={false}
                iconOffset={false} />
              <InputField
                fullWidth={true}
                inlineIndicator={false}
                onChange={[Function]}
                onFocus={[Function]}
                onHeightChange={[Function]}
                onKeyDown={[Function]}
                placeholder="e.g. Finish Report @work"
                type="text"
                value="">
                <input
                  className="md-text-field md-text md-full-width md-text-field--margin"
                  onChange={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  placeholder="e.g. Finish Report @work"
                  type="text"
                  value="" />
              </InputField>
              <TextFieldDivider
                active={false}
                error={false}
                lineDirection="left">
                <Divider
                  className="md-divider--text-field md-divider--expand-from-left">
                  <hr
                    className="md-divider md-divider--text-field md-divider--expand-from-left" />
                </Divider>
              </TextFieldDivider>
              <TextFieldMessage
                active={false}
                currentLength={0}
                error={false}
                leftIcon={false}
                rightIcon={false} />
            </div>
          </TextField>
          <div
            className="flex row space-between">
            <div>
              <ButtonTooltipedInked
                icon={true}
                inkTransitionEnterTimeout={450}
                inkTransitionLeaveTimeout={300}
                inkTransitionOverlap={150}
                onClick={[Function]}>
                <ButtonTooltiped
                  icon={true}
                  ink={
                    <InkContainer
                      className={undefined}
                      disabledInteractions={undefined}
                      inkClassName={undefined}
                      inkStyle={undefined}
                      style={undefined}
                      transitionEnterTimeout={450}
                      transitionLeaveTimeout={300}
                      transitionOverlap={150}
                      waitForInkTransition={undefined} />
                  }
                  onClick={[Function]}
                  tooltipDelay={0}
                  tooltipPosition="bottom"
                  tooltipTransitionEnterTimeout={150}
                  tooltipTransitionLeaveTimeout={150}>
                  <Button
                    fixedPosition="br"
                    icon={true}
                    iconBefore={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined} />
                    }
                    onClick={[Function]}
                    type="button">
                    <button
                      className="md-inline-block md-btn md-btn--icon md-pointer--hover"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      type="button">
                      <InkContainer
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}>
                        <ReactTransitionGroup
                          childFactory={[Function]}
                          className="md-ink-container"
                          component="div">
                          <div
                            className="md-ink-container" />
                        </ReactTransitionGroup>
                      </InkContainer>
                      <FontIcon
                        iconClassName="material-icons">
                        <i
                          className="md-icon material-icons">
                          <MdLabel>
                            <IconBase
                              viewBox="0 0 40 40">
                              <svg
                                fill="currentColor"
                                height="1em"
                                preserveAspectRatio="xMidYMid meet"
                                style={
                                  Object {
                                    "color": undefined,
                                    "verticalAlign": "middle",
                                  }
                                }
                                viewBox="0 0 40 40"
                                width="1em">
                                <g>
                                  <path
                                    d="m29.4 9.8l7.2 10.2-7.2 10.2c-0.6 0.9-1.7 1.4-2.8 1.4h-18.2c-1.8 0-3.4-1.4-3.4-3.2v-16.8c0-1.8 1.6-3.2 3.4-3.2h18.2c1.1 0 2.1 0.5 2.8 1.4z" />
                                </g>
                              </svg>
                            </IconBase>
                          </MdLabel>
                        </i>
                      </FontIcon>
                    </button>
                  </Button>
                </ButtonTooltiped>
              </ButtonTooltipedInked>
            </div>
            <div>
              <ButtonTooltipedInked
                icon={true}
                inkTransitionEnterTimeout={450}
                inkTransitionLeaveTimeout={300}
                inkTransitionOverlap={150}
                onClick={[Function]}>
                <ButtonTooltiped
                  icon={true}
                  ink={
                    <InkContainer
                      className={undefined}
                      disabledInteractions={undefined}
                      inkClassName={undefined}
                      inkStyle={undefined}
                      style={undefined}
                      transitionEnterTimeout={450}
                      transitionLeaveTimeout={300}
                      transitionOverlap={150}
                      waitForInkTransition={undefined} />
                  }
                  onClick={[Function]}
                  tooltipDelay={0}
                  tooltipPosition="bottom"
                  tooltipTransitionEnterTimeout={150}
                  tooltipTransitionLeaveTimeout={150}>
                  <Button
                    fixedPosition="br"
                    icon={true}
                    iconBefore={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined} />
                    }
                    onClick={[Function]}
                    type="button">
                    <button
                      className="md-inline-block md-btn md-btn--icon md-pointer--hover"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      type="button">
                      <InkContainer
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}>
                        <ReactTransitionGroup
                          childFactory={[Function]}
                          className="md-ink-container"
                          component="div">
                          <div
                            className="md-ink-container" />
                        </ReactTransitionGroup>
                      </InkContainer>
                      <FontIcon
                        iconClassName="material-icons">
                        <i
                          className="md-icon material-icons">
                          <MdAssignment>
                            <IconBase
                              viewBox="0 0 40 40">
                              <svg
                                fill="currentColor"
                                height="1em"
                                preserveAspectRatio="xMidYMid meet"
                                style={
                                  Object {
                                    "color": undefined,
                                    "verticalAlign": "middle",
                                  }
                                }
                                viewBox="0 0 40 40"
                                width="1em">
                                <g>
                                  <path
                                    d="m28.4 15v-3.4h-16.8v3.4h16.8z m0 6.6v-3.2h-16.8v3.2h16.8z m-5 6.8v-3.4h-11.8v3.4h11.8z m-3.4-23.4c-0.9 0-1.6 0.7-1.6 1.6s0.7 1.8 1.6 1.8 1.6-0.8 1.6-1.8-0.7-1.6-1.6-1.6z m11.6 0c1.8 0 3.4 1.6 3.4 3.4v23.2c0 1.8-1.6 3.4-3.4 3.4h-23.2c-1.8 0-3.4-1.6-3.4-3.4v-23.2c0-1.8 1.6-3.4 3.4-3.4h6.9c0.7-2 2.5-3.4 4.7-3.4s4 1.4 4.7 3.4h6.9z" />
                                </g>
                              </svg>
                            </IconBase>
                          </MdAssignment>
                        </i>
                      </FontIcon>
                    </button>
                  </Button>
                </ButtonTooltiped>
              </ButtonTooltipedInked>
              <ButtonTooltipedInked
                icon={true}
                inkTransitionEnterTimeout={450}
                inkTransitionLeaveTimeout={300}
                inkTransitionOverlap={150}
                primary={true}
                type="submit">
                <ButtonTooltiped
                  icon={true}
                  ink={
                    <InkContainer
                      className={undefined}
                      disabledInteractions={undefined}
                      inkClassName={undefined}
                      inkStyle={undefined}
                      style={undefined}
                      transitionEnterTimeout={450}
                      transitionLeaveTimeout={300}
                      transitionOverlap={150}
                      waitForInkTransition={undefined} />
                  }
                  primary={true}
                  tooltipDelay={0}
                  tooltipPosition="bottom"
                  tooltipTransitionEnterTimeout={150}
                  tooltipTransitionLeaveTimeout={150}
                  type="submit">
                  <Button
                    fixedPosition="br"
                    icon={true}
                    iconBefore={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined} />
                    }
                    primary={true}
                    type="submit">
                    <button
                      className="md-inline-block md-btn md-btn--icon md-text--theme-primary md-ink--primary md-pointer--hover"
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      type="submit">
                      <InkContainer
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}>
                        <ReactTransitionGroup
                          childFactory={[Function]}
                          className="md-ink-container"
                          component="div">
                          <div
                            className="md-ink-container" />
                        </ReactTransitionGroup>
                      </InkContainer>
                      <FontIcon
                        iconClassName="material-icons">
                        <i
                          className="md-icon material-icons">
                          <MdSend>
                            <IconBase
                              viewBox="0 0 40 40">
                              <svg
                                fill="currentColor"
                                height="1em"
                                preserveAspectRatio="xMidYMid meet"
                                style={
                                  Object {
                                    "color": undefined,
                                    "verticalAlign": "middle",
                                  }
                                }
                                viewBox="0 0 40 40"
                                width="1em">
                                <g>
                                  <path
                                    d="m3.4 35v-11.6l25-3.4-25-3.4v-11.6l35 15z" />
                                </g>
                              </svg>
                            </IconBase>
                          </MdSend>
                        </i>
                      </FontIcon>
                    </button>
                  </Button>
                </ButtonTooltiped>
              </ButtonTooltipedInked>
            </div>
          </div>
        </div>
      </div>
    </Paper>
  </form>
</AddItem>
`;

exports[`AddItem component renders correctly when canChangeType is true and initialIsProject is true 1`] = `
<AddItem
  canChangeType={true}
  initialIsProject={true}
  onAddItem={[Function]}>
  <form
    onSubmit={[Function]}>
    <Paper
      className="md-drawer-relative"
      component="div"
      style={
        Object {
          "backgroundColor": "#fff",
          "padding": 10,
        }
      }
      zDepth={2}>
      <div
        className="md-paper md-paper--2 md-drawer-relative"
        style={
          Object {
            "backgroundColor": "#fff",
            "padding": 10,
          }
        }>
        <div
          className="flex column">
          <TextField
            fullWidth={true}
            leftIconStateful={true}
            lineDirection="left"
            onChange={[Function]}
            passwordIconChildren="remove_red_eye"
            placeholder="e.g. Report"
            rightIconStateful={true}
            type="text"
            value="">
            <div
              className="md-text-field-container md-full-width md-text-field-container--input"
              onClick={[Function]}
              style={
                Object {
                  "height": null,
                }
              }>
              <FloatingLabel
                active={false}
                error={false}
                floating={false}
                iconOffset={false} />
              <InputField
                fullWidth={true}
                inlineIndicator={false}
                onChange={[Function]}
                onFocus={[Function]}
                onHeightChange={[Function]}
                onKeyDown={[Function]}
                placeholder="e.g. Report"
                type="text"
                value="">
                <input
                  className="md-text-field md-text md-full-width md-text-field--margin"
                  onChange={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  placeholder="e.g. Report"
                  type="text"
                  value="" />
              </InputField>
              <TextFieldDivider
                active={false}
                error={false}
                lineDirection="left">
                <Divider
                  className="md-divider--text-field md-divider--expand-from-left">
                  <hr
                    className="md-divider md-divider--text-field md-divider--expand-from-left" />
                </Divider>
              </TextFieldDivider>
              <TextFieldMessage
                active={false}
                currentLength={0}
                error={false}
                leftIcon={false}
                rightIcon={false} />
            </div>
          </TextField>
          <div
            className="flex row space-between">
            <div>
              <ButtonTooltipedInked
                icon={true}
                inkTransitionEnterTimeout={450}
                inkTransitionLeaveTimeout={300}
                inkTransitionOverlap={150}
                onClick={[Function]}>
                <ButtonTooltiped
                  icon={true}
                  ink={
                    <InkContainer
                      className={undefined}
                      disabledInteractions={undefined}
                      inkClassName={undefined}
                      inkStyle={undefined}
                      style={undefined}
                      transitionEnterTimeout={450}
                      transitionLeaveTimeout={300}
                      transitionOverlap={150}
                      waitForInkTransition={undefined} />
                  }
                  onClick={[Function]}
                  tooltipDelay={0}
                  tooltipPosition="bottom"
                  tooltipTransitionEnterTimeout={150}
                  tooltipTransitionLeaveTimeout={150}>
                  <Button
                    fixedPosition="br"
                    icon={true}
                    iconBefore={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined} />
                    }
                    onClick={[Function]}
                    type="button">
                    <button
                      className="md-inline-block md-btn md-btn--icon md-pointer--hover"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      type="button">
                      <InkContainer
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}>
                        <ReactTransitionGroup
                          childFactory={[Function]}
                          className="md-ink-container"
                          component="div">
                          <div
                            className="md-ink-container" />
                        </ReactTransitionGroup>
                      </InkContainer>
                      <FontIcon
                        iconClassName="material-icons">
                        <i
                          className="md-icon material-icons">
                          <MdLabel>
                            <IconBase
                              viewBox="0 0 40 40">
                              <svg
                                fill="currentColor"
                                height="1em"
                                preserveAspectRatio="xMidYMid meet"
                                style={
                                  Object {
                                    "color": undefined,
                                    "verticalAlign": "middle",
                                  }
                                }
                                viewBox="0 0 40 40"
                                width="1em">
                                <g>
                                  <path
                                    d="m29.4 9.8l7.2 10.2-7.2 10.2c-0.6 0.9-1.7 1.4-2.8 1.4h-18.2c-1.8 0-3.4-1.4-3.4-3.2v-16.8c0-1.8 1.6-3.2 3.4-3.2h18.2c1.1 0 2.1 0.5 2.8 1.4z" />
                                </g>
                              </svg>
                            </IconBase>
                          </MdLabel>
                        </i>
                      </FontIcon>
                    </button>
                  </Button>
                </ButtonTooltiped>
              </ButtonTooltipedInked>
            </div>
            <div>
              <ButtonTooltipedInked
                icon={true}
                inkTransitionEnterTimeout={450}
                inkTransitionLeaveTimeout={300}
                inkTransitionOverlap={150}
                onClick={[Function]}>
                <ButtonTooltiped
                  icon={true}
                  ink={
                    <InkContainer
                      className={undefined}
                      disabledInteractions={undefined}
                      inkClassName={undefined}
                      inkStyle={undefined}
                      style={undefined}
                      transitionEnterTimeout={450}
                      transitionLeaveTimeout={300}
                      transitionOverlap={150}
                      waitForInkTransition={undefined} />
                  }
                  onClick={[Function]}
                  tooltipDelay={0}
                  tooltipPosition="bottom"
                  tooltipTransitionEnterTimeout={150}
                  tooltipTransitionLeaveTimeout={150}>
                  <Button
                    fixedPosition="br"
                    icon={true}
                    iconBefore={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined} />
                    }
                    onClick={[Function]}
                    type="button">
                    <button
                      className="md-inline-block md-btn md-btn--icon md-pointer--hover"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      type="button">
                      <InkContainer
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}>
                        <ReactTransitionGroup
                          childFactory={[Function]}
                          className="md-ink-container"
                          component="div">
                          <div
                            className="md-ink-container" />
                        </ReactTransitionGroup>
                      </InkContainer>
                      <FontIcon
                        iconClassName="material-icons">
                        <i
                          className="md-icon material-icons">
                          <MdDone>
                            <IconBase
                              viewBox="0 0 40 40">
                              <svg
                                fill="currentColor"
                                height="1em"
                                preserveAspectRatio="xMidYMid meet"
                                style={
                                  Object {
                                    "color": undefined,
                                    "verticalAlign": "middle",
                                  }
                                }
                                viewBox="0 0 40 40"
                                width="1em">
                                <g>
                                  <path
                                    d="m15 27l17.7-17.7 2.3 2.3-20 20-9.3-9.3 2.3-2.3z" />
                                </g>
                              </svg>
                            </IconBase>
                          </MdDone>
                        </i>
                      </FontIcon>
                    </button>
                  </Button>
                </ButtonTooltiped>
              </ButtonTooltipedInked>
              <ButtonTooltipedInked
                icon={true}
                inkTransitionEnterTimeout={450}
                inkTransitionLeaveTimeout={300}
                inkTransitionOverlap={150}
                primary={true}
                type="submit">
                <ButtonTooltiped
                  icon={true}
                  ink={
                    <InkContainer
                      className={undefined}
                      disabledInteractions={undefined}
                      inkClassName={undefined}
                      inkStyle={undefined}
                      style={undefined}
                      transitionEnterTimeout={450}
                      transitionLeaveTimeout={300}
                      transitionOverlap={150}
                      waitForInkTransition={undefined} />
                  }
                  primary={true}
                  tooltipDelay={0}
                  tooltipPosition="bottom"
                  tooltipTransitionEnterTimeout={150}
                  tooltipTransitionLeaveTimeout={150}
                  type="submit">
                  <Button
                    fixedPosition="br"
                    icon={true}
                    iconBefore={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined} />
                    }
                    primary={true}
                    type="submit">
                    <button
                      className="md-inline-block md-btn md-btn--icon md-text--theme-primary md-ink--primary md-pointer--hover"
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      type="submit">
                      <InkContainer
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}>
                        <ReactTransitionGroup
                          childFactory={[Function]}
                          className="md-ink-container"
                          component="div">
                          <div
                            className="md-ink-container" />
                        </ReactTransitionGroup>
                      </InkContainer>
                      <FontIcon
                        iconClassName="material-icons">
                        <i
                          className="md-icon material-icons">
                          <MdSend>
                            <IconBase
                              viewBox="0 0 40 40">
                              <svg
                                fill="currentColor"
                                height="1em"
                                preserveAspectRatio="xMidYMid meet"
                                style={
                                  Object {
                                    "color": undefined,
                                    "verticalAlign": "middle",
                                  }
                                }
                                viewBox="0 0 40 40"
                                width="1em">
                                <g>
                                  <path
                                    d="m3.4 35v-11.6l25-3.4-25-3.4v-11.6l35 15z" />
                                </g>
                              </svg>
                            </IconBase>
                          </MdSend>
                        </i>
                      </FontIcon>
                    </button>
                  </Button>
                </ButtonTooltiped>
              </ButtonTooltipedInked>
            </div>
          </div>
        </div>
      </div>
    </Paper>
  </form>
</AddItem>
`;

exports[`AddItem component renders correctly when initialIsProject is false 1`] = `
<AddItem
  onAddItem={[Function]}>
  <form
    onSubmit={[Function]}>
    <Paper
      className="md-drawer-relative"
      component="div"
      style={
        Object {
          "backgroundColor": "#fff",
          "padding": 10,
        }
      }
      zDepth={2}>
      <div
        className="md-paper md-paper--2 md-drawer-relative"
        style={
          Object {
            "backgroundColor": "#fff",
            "padding": 10,
          }
        }>
        <div
          className="flex column">
          <TextField
            fullWidth={true}
            leftIconStateful={true}
            lineDirection="left"
            onChange={[Function]}
            passwordIconChildren="remove_red_eye"
            placeholder="e.g. Finish Report @work"
            rightIconStateful={true}
            type="text"
            value="">
            <div
              className="md-text-field-container md-full-width md-text-field-container--input"
              onClick={[Function]}
              style={
                Object {
                  "height": null,
                }
              }>
              <FloatingLabel
                active={false}
                error={false}
                floating={false}
                iconOffset={false} />
              <InputField
                fullWidth={true}
                inlineIndicator={false}
                onChange={[Function]}
                onFocus={[Function]}
                onHeightChange={[Function]}
                onKeyDown={[Function]}
                placeholder="e.g. Finish Report @work"
                type="text"
                value="">
                <input
                  className="md-text-field md-text md-full-width md-text-field--margin"
                  onChange={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  placeholder="e.g. Finish Report @work"
                  type="text"
                  value="" />
              </InputField>
              <TextFieldDivider
                active={false}
                error={false}
                lineDirection="left">
                <Divider
                  className="md-divider--text-field md-divider--expand-from-left">
                  <hr
                    className="md-divider md-divider--text-field md-divider--expand-from-left" />
                </Divider>
              </TextFieldDivider>
              <TextFieldMessage
                active={false}
                currentLength={0}
                error={false}
                leftIcon={false}
                rightIcon={false} />
            </div>
          </TextField>
          <div
            className="flex row space-between">
            <div>
              <ButtonTooltipedInked
                icon={true}
                inkTransitionEnterTimeout={450}
                inkTransitionLeaveTimeout={300}
                inkTransitionOverlap={150}
                onClick={[Function]}>
                <ButtonTooltiped
                  icon={true}
                  ink={
                    <InkContainer
                      className={undefined}
                      disabledInteractions={undefined}
                      inkClassName={undefined}
                      inkStyle={undefined}
                      style={undefined}
                      transitionEnterTimeout={450}
                      transitionLeaveTimeout={300}
                      transitionOverlap={150}
                      waitForInkTransition={undefined} />
                  }
                  onClick={[Function]}
                  tooltipDelay={0}
                  tooltipPosition="bottom"
                  tooltipTransitionEnterTimeout={150}
                  tooltipTransitionLeaveTimeout={150}>
                  <Button
                    fixedPosition="br"
                    icon={true}
                    iconBefore={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined} />
                    }
                    onClick={[Function]}
                    type="button">
                    <button
                      className="md-inline-block md-btn md-btn--icon md-pointer--hover"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      type="button">
                      <InkContainer
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}>
                        <ReactTransitionGroup
                          childFactory={[Function]}
                          className="md-ink-container"
                          component="div">
                          <div
                            className="md-ink-container" />
                        </ReactTransitionGroup>
                      </InkContainer>
                      <FontIcon
                        iconClassName="material-icons">
                        <i
                          className="md-icon material-icons">
                          <MdLabel>
                            <IconBase
                              viewBox="0 0 40 40">
                              <svg
                                fill="currentColor"
                                height="1em"
                                preserveAspectRatio="xMidYMid meet"
                                style={
                                  Object {
                                    "color": undefined,
                                    "verticalAlign": "middle",
                                  }
                                }
                                viewBox="0 0 40 40"
                                width="1em">
                                <g>
                                  <path
                                    d="m29.4 9.8l7.2 10.2-7.2 10.2c-0.6 0.9-1.7 1.4-2.8 1.4h-18.2c-1.8 0-3.4-1.4-3.4-3.2v-16.8c0-1.8 1.6-3.2 3.4-3.2h18.2c1.1 0 2.1 0.5 2.8 1.4z" />
                                </g>
                              </svg>
                            </IconBase>
                          </MdLabel>
                        </i>
                      </FontIcon>
                    </button>
                  </Button>
                </ButtonTooltiped>
              </ButtonTooltipedInked>
            </div>
            <div>
              <ButtonTooltipedInked
                icon={true}
                inkTransitionEnterTimeout={450}
                inkTransitionLeaveTimeout={300}
                inkTransitionOverlap={150}
                primary={true}
                type="submit">
                <ButtonTooltiped
                  icon={true}
                  ink={
                    <InkContainer
                      className={undefined}
                      disabledInteractions={undefined}
                      inkClassName={undefined}
                      inkStyle={undefined}
                      style={undefined}
                      transitionEnterTimeout={450}
                      transitionLeaveTimeout={300}
                      transitionOverlap={150}
                      waitForInkTransition={undefined} />
                  }
                  primary={true}
                  tooltipDelay={0}
                  tooltipPosition="bottom"
                  tooltipTransitionEnterTimeout={150}
                  tooltipTransitionLeaveTimeout={150}
                  type="submit">
                  <Button
                    fixedPosition="br"
                    icon={true}
                    iconBefore={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined} />
                    }
                    primary={true}
                    type="submit">
                    <button
                      className="md-inline-block md-btn md-btn--icon md-text--theme-primary md-ink--primary md-pointer--hover"
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      type="submit">
                      <InkContainer
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}>
                        <ReactTransitionGroup
                          childFactory={[Function]}
                          className="md-ink-container"
                          component="div">
                          <div
                            className="md-ink-container" />
                        </ReactTransitionGroup>
                      </InkContainer>
                      <FontIcon
                        iconClassName="material-icons">
                        <i
                          className="md-icon material-icons">
                          <MdSend>
                            <IconBase
                              viewBox="0 0 40 40">
                              <svg
                                fill="currentColor"
                                height="1em"
                                preserveAspectRatio="xMidYMid meet"
                                style={
                                  Object {
                                    "color": undefined,
                                    "verticalAlign": "middle",
                                  }
                                }
                                viewBox="0 0 40 40"
                                width="1em">
                                <g>
                                  <path
                                    d="m3.4 35v-11.6l25-3.4-25-3.4v-11.6l35 15z" />
                                </g>
                              </svg>
                            </IconBase>
                          </MdSend>
                        </i>
                      </FontIcon>
                    </button>
                  </Button>
                </ButtonTooltiped>
              </ButtonTooltipedInked>
            </div>
          </div>
        </div>
      </div>
    </Paper>
  </form>
</AddItem>
`;

exports[`AddItem component renders correctly when initialIsProject is true 1`] = `
<AddItem
  initialIsProject={true}
  onAddItem={[Function]}>
  <form
    onSubmit={[Function]}>
    <Paper
      className="md-drawer-relative"
      component="div"
      style={
        Object {
          "backgroundColor": "#fff",
          "padding": 10,
        }
      }
      zDepth={2}>
      <div
        className="md-paper md-paper--2 md-drawer-relative"
        style={
          Object {
            "backgroundColor": "#fff",
            "padding": 10,
          }
        }>
        <div
          className="flex column">
          <TextField
            fullWidth={true}
            leftIconStateful={true}
            lineDirection="left"
            onChange={[Function]}
            passwordIconChildren="remove_red_eye"
            placeholder="e.g. Report"
            rightIconStateful={true}
            type="text"
            value="">
            <div
              className="md-text-field-container md-full-width md-text-field-container--input"
              onClick={[Function]}
              style={
                Object {
                  "height": null,
                }
              }>
              <FloatingLabel
                active={false}
                error={false}
                floating={false}
                iconOffset={false} />
              <InputField
                fullWidth={true}
                inlineIndicator={false}
                onChange={[Function]}
                onFocus={[Function]}
                onHeightChange={[Function]}
                onKeyDown={[Function]}
                placeholder="e.g. Report"
                type="text"
                value="">
                <input
                  className="md-text-field md-text md-full-width md-text-field--margin"
                  onChange={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  placeholder="e.g. Report"
                  type="text"
                  value="" />
              </InputField>
              <TextFieldDivider
                active={false}
                error={false}
                lineDirection="left">
                <Divider
                  className="md-divider--text-field md-divider--expand-from-left">
                  <hr
                    className="md-divider md-divider--text-field md-divider--expand-from-left" />
                </Divider>
              </TextFieldDivider>
              <TextFieldMessage
                active={false}
                currentLength={0}
                error={false}
                leftIcon={false}
                rightIcon={false} />
            </div>
          </TextField>
          <div
            className="flex row space-between">
            <div>
              <ButtonTooltipedInked
                icon={true}
                inkTransitionEnterTimeout={450}
                inkTransitionLeaveTimeout={300}
                inkTransitionOverlap={150}
                onClick={[Function]}>
                <ButtonTooltiped
                  icon={true}
                  ink={
                    <InkContainer
                      className={undefined}
                      disabledInteractions={undefined}
                      inkClassName={undefined}
                      inkStyle={undefined}
                      style={undefined}
                      transitionEnterTimeout={450}
                      transitionLeaveTimeout={300}
                      transitionOverlap={150}
                      waitForInkTransition={undefined} />
                  }
                  onClick={[Function]}
                  tooltipDelay={0}
                  tooltipPosition="bottom"
                  tooltipTransitionEnterTimeout={150}
                  tooltipTransitionLeaveTimeout={150}>
                  <Button
                    fixedPosition="br"
                    icon={true}
                    iconBefore={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined} />
                    }
                    onClick={[Function]}
                    type="button">
                    <button
                      className="md-inline-block md-btn md-btn--icon md-pointer--hover"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      type="button">
                      <InkContainer
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}>
                        <ReactTransitionGroup
                          childFactory={[Function]}
                          className="md-ink-container"
                          component="div">
                          <div
                            className="md-ink-container" />
                        </ReactTransitionGroup>
                      </InkContainer>
                      <FontIcon
                        iconClassName="material-icons">
                        <i
                          className="md-icon material-icons">
                          <MdLabel>
                            <IconBase
                              viewBox="0 0 40 40">
                              <svg
                                fill="currentColor"
                                height="1em"
                                preserveAspectRatio="xMidYMid meet"
                                style={
                                  Object {
                                    "color": undefined,
                                    "verticalAlign": "middle",
                                  }
                                }
                                viewBox="0 0 40 40"
                                width="1em">
                                <g>
                                  <path
                                    d="m29.4 9.8l7.2 10.2-7.2 10.2c-0.6 0.9-1.7 1.4-2.8 1.4h-18.2c-1.8 0-3.4-1.4-3.4-3.2v-16.8c0-1.8 1.6-3.2 3.4-3.2h18.2c1.1 0 2.1 0.5 2.8 1.4z" />
                                </g>
                              </svg>
                            </IconBase>
                          </MdLabel>
                        </i>
                      </FontIcon>
                    </button>
                  </Button>
                </ButtonTooltiped>
              </ButtonTooltipedInked>
            </div>
            <div>
              <ButtonTooltipedInked
                icon={true}
                inkTransitionEnterTimeout={450}
                inkTransitionLeaveTimeout={300}
                inkTransitionOverlap={150}
                primary={true}
                type="submit">
                <ButtonTooltiped
                  icon={true}
                  ink={
                    <InkContainer
                      className={undefined}
                      disabledInteractions={undefined}
                      inkClassName={undefined}
                      inkStyle={undefined}
                      style={undefined}
                      transitionEnterTimeout={450}
                      transitionLeaveTimeout={300}
                      transitionOverlap={150}
                      waitForInkTransition={undefined} />
                  }
                  primary={true}
                  tooltipDelay={0}
                  tooltipPosition="bottom"
                  tooltipTransitionEnterTimeout={150}
                  tooltipTransitionLeaveTimeout={150}
                  type="submit">
                  <Button
                    fixedPosition="br"
                    icon={true}
                    iconBefore={true}
                    ink={
                      <InkContainer
                        className={undefined}
                        disabledInteractions={undefined}
                        inkClassName={undefined}
                        inkStyle={undefined}
                        style={undefined}
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}
                        waitForInkTransition={undefined} />
                    }
                    primary={true}
                    type="submit">
                    <button
                      className="md-inline-block md-btn md-btn--icon md-text--theme-primary md-ink--primary md-pointer--hover"
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseOver={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      type="submit">
                      <InkContainer
                        transitionEnterTimeout={450}
                        transitionLeaveTimeout={300}
                        transitionOverlap={150}>
                        <ReactTransitionGroup
                          childFactory={[Function]}
                          className="md-ink-container"
                          component="div">
                          <div
                            className="md-ink-container" />
                        </ReactTransitionGroup>
                      </InkContainer>
                      <FontIcon
                        iconClassName="material-icons">
                        <i
                          className="md-icon material-icons">
                          <MdSend>
                            <IconBase
                              viewBox="0 0 40 40">
                              <svg
                                fill="currentColor"
                                height="1em"
                                preserveAspectRatio="xMidYMid meet"
                                style={
                                  Object {
                                    "color": undefined,
                                    "verticalAlign": "middle",
                                  }
                                }
                                viewBox="0 0 40 40"
                                width="1em">
                                <g>
                                  <path
                                    d="m3.4 35v-11.6l25-3.4-25-3.4v-11.6l35 15z" />
                                </g>
                              </svg>
                            </IconBase>
                          </MdSend>
                        </i>
                      </FontIcon>
                    </button>
                  </Button>
                </ButtonTooltiped>
              </ButtonTooltipedInked>
            </div>
          </div>
        </div>
      </div>
    </Paper>
  </form>
</AddItem>
`;
